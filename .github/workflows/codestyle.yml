name: code-style

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        requirements: ['minimal', 'latest']
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set minimal dependencies
        if: matrix.requirements == 'minimal'
        run: |
          python -c "req = open('requirements.txt').read().replace('>', '=') ; open('requirements.txt', 'w').write(req)"

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -e .

      - name: Check code-style
        run: |
          catalyst-check-codestyle

      - name: Check dependencies compatibility
        run: |
          pip check
